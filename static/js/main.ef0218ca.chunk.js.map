{"version":3,"sources":["config/index.ts","api/index.ts","store/effects/asyncThunk.ts","store/reducers/appStateSlice.ts","store/reducers/usersSlice.ts","store/reducers/challegesSlice.ts","store/store.ts","components/NavMenu/NavMenu.tsx","pages/Chart/Chart.tsx","pages/Users.tsx","pages/Pages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["config","users","username","name","usersEndpoint","challengesPrefix","challengesEndpoint","getUserData","user","axios","get","getUserChallenges","fetchUsers","createAsyncThunk","a","length","requests","forEach","push","Promise","all","rawResponse","response","map","resp","data","console","log","fetchChallenges","i","fetchChallengesDetails","challenges","challenge","initialState","status","error","undefined","appStateSlice","createSlice","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","message","selectAppState","appState","selectedUser","usersSlice","resetUsers","selectUser","find","payload","clearSelectedUser","actions","selectUsers","selectSelectedUser","challengesSlice","userChallengesDetails","selectChallenges","selectChallengesDetails","store","configureStore","reducer","appStateReducer","usersReducer","challengesReducer","navLinkGroups","links","url","key","disabled","NavMenu","useState","setState","selectedKey","setSelectedKey","navigate","useNavigate","useSelector","setNavState","useCallback","useEffect","Nav","ariaLabel","groups","onLinkClick","ev","item","scoreDict","Chart","userChallenges","filter","ch","challegesData","flatMap","dataY","setDataY","dataX","setDataX","dispatch","useDispatch","challengesId","id","prepareData","completedLanguages","includes","sort","b","Date","completedAt","getTime","reduce","acc","cV","score","rank","toLocaleString","scores","Object","values","val","dates","keys","className","option","grid","top","right","bottom","left","xAxis","type","yAxis","series","smooth","tooltip","trigger","notMerge","lazyUpdate","theme","onChartReady","selection","Selection","canSelectItem","getKey","Users","loadingStatus","getValidName","ShimmeredDetailsList","checkboxVisibility","CheckboxVisibility","hidden","items","ts","ranks","languages","typescript","js","javascript","completedChallenges","match","challengeCount","user1","user2","enableShimmer","columns","fieldName","minWidth","maxWidth","isPadded","selectionMode","SelectionMode","single","onActiveItemChanged","getSelection","getSelectedIndices","isKeySelected","selectionPreservedOnEmptyClick","onDidUpdate","detailsList","setKeySelected","Pages","index","element","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAgDeA,EAhDA,CACbC,MAAO,CACL,CACEC,SAAU,YACVC,KAAM,4BAER,CACED,SAAU,mBACVC,KAAM,wCAER,CACED,SAAU,gBACVC,KAAM,4BAER,CACED,SAAU,gBACVC,KAAM,4BAER,CACED,SAAU,mBACVC,KAAM,kCAER,CACED,SAAU,kBACVC,KAAM,4BAER,CACED,SAAU,WACVC,KAAM,4BAER,CACED,SAAU,aACVC,KAAM,4BAER,CACED,SAAU,eACVC,KAAM,wCAER,CACED,SAAU,UACVC,KAAM,6BAGVC,cAAe,yCACfC,iBAAkB,oCAClBC,mBAAoB,oDCzCTC,EAAc,SAACC,GAC1B,OAAOC,IAAMC,IAAIV,EAAOI,cAAgBI,IAG7BG,EAAoB,SAACH,GAChC,OAAOC,IAAMC,IAAIV,EAAOI,cAAgBI,EAAOR,EAAOK,mBCC3CO,EAAaC,YAAiB,mBAAD,sBAAqB,gCAAAC,EAAA,yDACxDd,EAAOC,MAAMc,OAD2C,yCAEpD,IAFoD,cAKvDC,EAA2C,GACjDhB,EAAOC,MAAMgB,SAAQ,SAACT,GACpBQ,EAASE,KAAKX,EAAYC,EAAKN,cAP4B,kBAUViB,QAAQC,IAAIJ,GAVF,cAUrDK,EAVqD,OAWrDC,EAAWD,EAAYE,KAAI,SAACC,GAAD,OAA+BA,EAAKC,QAXV,kBAYpDH,GAZoD,yCAc3DI,QAAQC,IAAI,SAAZ,MAd2D,kBAepD,IAfoD,2DAoBlDC,EAAkBf,YAAiB,wBAAD,sBAA0B,gCAAAC,EAAA,yDAClEd,EAAOC,MAAMc,OADqD,yCAE9D,IAF8D,cAKjEC,EAAgD,GACtDhB,EAAOC,MAAMgB,SAAQ,SAACT,GACpBQ,EAASE,KAAKP,EAAkBH,EAAKN,cAPgC,kBAUfiB,QAAQC,IAAIJ,GAVG,cAU/DK,EAV+D,OAW/DC,EAAWD,EAAYE,KAAI,SAACC,EAAgCK,GAAjC,mBAAC,eAAoDL,EAAKC,MAA1D,IAAgEvB,SAAUF,EAAOC,MAAO4B,GAAI3B,cAXxD,kBAY9DoB,GAZ8D,yCAcrEI,QAAQC,IAAI,SAAZ,MAdqE,kBAe9D,IAf8D,2DAmB5DG,EAAyBjB,YAAiB,+BAAD,uCAAiC,WAAOkB,GAAP,mBAAAjB,EAAA,yDAChFd,EAAOC,MAAMc,QAAWgB,GAAeA,EAAWhB,OAD8B,yCAE5E,IAF4E,cAK/EC,EAAuD,GAC7De,EAAWd,SAAQ,SAACc,GD3Cc,IAACC,EC4CjChB,EAASE,MD5CwBc,EC4CED,ED3C9BtB,IAAMC,IAAIV,EAAOM,mBAAqB0B,QCoCwC,kBAUtBb,QAAQC,IAAIJ,GAVU,cAU7EK,EAV6E,OAW7EC,EAAWD,EAAYE,KAAI,SAACC,GAAD,sBAAiDA,EAAKC,SAXJ,kBAY5EH,GAZ4E,yCAcnFI,QAAQC,IAAI,SAAZ,MAdmF,kBAe5E,IAf4E,0DAAjC,uDCvChDM,EAAyB,CAC7BC,OAAQ,OACRC,WAAOC,GAGIC,EAAgBC,YAAY,CACvCnC,KAAM,WACN8B,eACAM,SAAU,GAEVC,cALuC,SAKzBC,GACZA,EACGC,QAAQ9B,EAAW+B,SAAS,SAACC,GAC5BA,EAAMV,OAAS,aAEhBQ,QAAQ9B,EAAWiC,WAAW,SAACD,GAC9BA,EAAMV,OAAS,UAEhBQ,QAAQ9B,EAAWkC,UAAU,SAACF,EAAOG,GACpCH,EAAMV,OAAS,QACfU,EAAMT,MAAQY,EAAOZ,MAAMa,WAE5BN,QAAQd,EAAgBe,SAAS,SAACC,GACjCA,EAAMV,OAAS,aAEhBQ,QAAQd,EAAgBiB,WAAW,SAACD,GACnCA,EAAMV,OAAS,UAEhBQ,QAAQd,EAAgBkB,UAAU,SAACF,EAAOG,GACzCH,EAAMV,OAAS,QACfU,EAAMT,MAAQY,EAAOZ,MAAMa,cAKtBC,EAAiB,SAACL,GAAD,OAAsBA,EAAMM,SAAShB,QAEpDG,IAAf,Q,QCrCMJ,EAA0B,CAC9BhC,MAAO,GACPkD,kBAAcf,GAGHgB,EAAad,YAAY,CACpCnC,KAAM,QACN8B,eACAM,SAAU,CACRc,WAAY,SAAAT,GACVA,EAAM3C,MAAQ,IAEhBqD,WAAY,SAACV,EAAOG,GAClBH,EAAMO,aAAeP,EAAM3C,MAAMsD,MAAK,SAAA/C,GAAI,aAAIA,EAAKN,YAAL,UAAkB6C,EAAOS,eAAzB,aAAkB,EAAgBtD,cAElFuD,kBAAmB,SAACb,GAClBA,EAAMO,kBAAef,IAGzBI,cAdoC,SActBC,GACZA,EACGC,QAAQ9B,EAAWiC,WAAW,SAACD,EAAOG,GACrCH,EAAM3C,MAAN,YAAmB8C,EAAOS,YAE3Bd,QAAQ9B,EAAWkC,UAAU,SAACF,EAAOG,GACpCH,EAAM3C,MAAQ,S,EAKuCmD,EAAWM,QAA7CJ,G,EAAZD,W,EAAYC,YAGdK,G,EAH0BF,kBAGZ,SAACb,GAAD,OAAsBA,EAAM3C,MAAMA,QAChD2D,EAAqB,SAAChB,GAAD,OAAsBA,EAAM3C,MAAMkD,cAGrDC,IAAf,QC9BaS,EAAkBvB,YAAY,CACzCnC,KAAM,aACN8B,aAPoC,CACpCF,WAAY,GACZ+B,sBAAuB,IAMvBvB,SAAU,GAEVC,cALyC,SAK3BC,GACZA,EACGC,QAAQd,EAAgBiB,WAAW,SAACD,EAAOG,GAC1CH,EAAMb,WAAN,YAAwBgB,EAAOS,YAEhCd,QAAQd,EAAgBkB,UAAU,SAACF,GAClCA,EAAMb,WAAa,MAEpBW,QAAQZ,EAAuBe,WAAW,SAACD,EAAOG,GACjDH,EAAMb,WAAN,YAAwBa,EAAMb,YAC9Ba,EAAMkB,sBAAN,YAAmCf,EAAOS,YAE3Cd,QAAQZ,EAAuBgB,UAAU,SAACF,GACzCA,EAAMkB,sBAAwB,SAMzBC,EAAmB,SAACnB,GAAD,OAAsBA,EAAMb,WAAWA,YAE1DiC,EAA0B,SAACpB,GAAD,OAAsBA,EAAMb,WAAW+B,uBAE/DD,IAAf,QCtCaI,EAAQC,YAAe,CAClCC,QAAS,CACPjB,SAAUkB,EACVnE,MAAOoE,EACPtC,WAAYuC,K,uCCJVC,EAAiC,CACrC,CACEC,MAAO,CACL,CAAErE,KAAM,QAASsE,IAAK,GAAIC,IAAK,SAC/B,CAAEvE,KAAM,UAAWsE,IAAK,GAAIC,IAAK,QAASC,UAAU,MAK3C,SAASC,IAAW,IAAD,EACJC,mBAASN,GADL,mBACxB3B,EADwB,KACjBkC,EADiB,OAEQD,mBAAS,SAFjB,mBAExBE,EAFwB,KAEXC,EAFW,KAK1BC,EAAWC,cACX/B,EAAegC,YAAYvB,GAE3BwB,EAAcC,uBAAY,WAC9BP,GAAS,SAAClC,GAER,OADAA,EAAO,GAAI4B,MAAO,GAAIG,UAAYxB,EAC3B,YAAKP,QAEb,CAAEO,IAGLmC,qBAAU,WACRF,MACC,CAAEjC,EAAciC,IAgBnB,OACE,8BACE,cAACG,EAAA,EAAD,CACER,YAAaA,EACbS,UAAU,wCACVC,OAAQ7C,EACR8C,YApBmB,SAACC,EAASC,GAEjC,OADAZ,GAAmB,OAAJY,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,MAAO,KAC5B,OAAQkB,QAAR,IAAQA,OAAR,EAAQA,EAAMlB,KACZ,IAAK,QACHO,EAAS,KACT,MACF,IAAK,QACHA,EAAS,UACT,MACF,QACEA,EAAS,W,YCjCXY,G,OAAyC,CAC7C,QAAS,EACT,QAAS,EACT,QAAS,EACT,QAAS,GACT,QAAS,GACT,QAAS,IACT,QAAS,IACT,QAAS,OA4FIC,MAzFf,WAEE,IHgBmC5F,EGhB7BiD,EAAiCgC,YAAYvB,GAC7CmC,EAA8BZ,aHeDjF,EGfiC,OAACiD,QAAD,IAACA,OAAD,EAACA,EAAcjD,SHef,SAAC0C,GAAD,OAAsBA,EAAMb,WAAWA,WAAWiE,QAAO,SAAAC,GAAE,OAAIA,EAAG/F,WAAaA,QGd7I4D,EAA4CqB,YAAYnB,GAExDkC,EAAgBH,EAAeI,SAAQ,SAAAF,GAAE,OAAIA,EAAGxE,QANvC,EAQaoD,mBAAS,IARtB,mBAQPuB,EARO,KAQAC,EARA,OASaxB,mBAAS,IATtB,mBASPyB,EATO,KASAC,EATA,KAYTC,EAAwBC,cAE9BnB,qBAAU,WACR,IAAMoB,EAAeR,EAAc3E,KAAI,SAAA0E,GAAE,OAAIA,EAAGU,MAChDH,EAAS1E,EAAuB4E,MAC/B,CAAEF,IAEL,IAAMI,EAAcvB,uBAAY,WAC9B,GAAIU,GAAkBA,EAAgB,GAAK,CAEzC,IAAIhE,EAAU,YAAQgE,EAAgB,GAAItE,KAAKuE,QAAO,SAAAC,GAAE,OAAIA,EAAGY,mBAAmBC,SAAS,eAAiBb,EAAGY,mBAAmBC,SAAS,kBAK3I/E,GAJAA,EAAaA,EAAWgF,MAAK,SAACjG,EAAGkG,GAC/B,OAAQ,IAAIC,KAAKD,EAAEE,aAAaC,UAAY,IAAIF,KAAKnG,EAAEoG,aAAaC,UAAY,GAAK,EAAI,MAGnEC,QAAO,SAACC,EAAUC,GAAQ,IAAD,EACzCC,EAAQ1B,GAAW,UAAA/B,EAAsBP,MAAK,SAAA0C,GAAE,OAAIA,EAAG9F,OAASmH,EAAGnH,eAAhD,eAAuDqH,KAAKrH,OAAQ,SACvF+G,EAAc,IAAID,KAAKK,EAAGJ,aAAaO,iBAM7C,OALMJ,EAAKH,GACTG,EAAKH,GAAcK,OAASA,EAE5BF,EAAKH,GAAgB,CAAEK,SAElBF,IACN,IAEH,IAAMK,EAASC,OAAOC,OAAO7F,GAAYR,KAAI,SAAAsG,GAAG,OAAIA,EAAIN,SAClDO,EAAQH,OAAOI,KAAKhG,GAC1BsE,EAAS,YAAKqB,IACdnB,EAAS,YAAKuB,OAEf,CAAEhE,IAiCL,OA/BAwB,qBAAU,WACRsB,MACC,CAAEA,IA8BH,qBAAKoB,UAAU,kBAAf,SACE,cAAC,IAAD,CACEC,OA7BG,CACLC,KAAM,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,IAC5CC,MAAO,CACLC,KAAM,WACN/G,KAAM6E,GAERmC,MAAO,CACLD,KAAM,SAERE,OAAQ,CACN,CACEjH,KAAM2E,EACNoC,KAAM,OACNG,QAAQ,IAGZC,QAAS,CACPC,QAAS,SAaTC,UAAU,EACVC,YAAY,EACZC,MAAO,aACPC,aAXuB,WAC3BvH,QAAQC,IAAI,IAAK,0B,iCCnFfuH,G,OAAY,IAAIC,IAAU,CAC9BC,cAAe,SAACxD,GAEd,OAAO,GAETyD,OAAQ,SAACzD,GACP,OAAOA,EAAK1F,aAwFDoJ,MApFf,WACE,IAAMC,EAAgBpE,YAAYlC,GAC5BhD,EAAgBkF,YAAYxB,GAC5BR,EAAiCgC,YAAYvB,GAC7C7B,EAA0BoD,YAAYpB,GAEtCyC,EAAwBC,cAE9BnB,qBAAU,WACRkB,EAAS5F,OACR,CAAE4F,IAELlB,qBAAU,WACJrF,EAAMc,QACRyF,EAAS5E,OAEV,CAAE3B,EAAOuG,IAEZ,IAAMgD,EAAe,SAACtJ,GAA8B,IAAD,EACjD,OAAO,UAAAF,EAAOC,MAAMsD,MAAK,SAAA/C,GAAI,OAAIA,EAAKN,WAAaA,YAA5C,eAAuDC,OAAQD,GAkDxE,OAAO,qBAAK8H,UAAU,kBAAf,SACL,cAACyB,EAAA,EAAD,CACEC,mBAAoBC,IAAmBC,OACvCC,MAlDwB5J,EAAMsB,KAAI,SAAAf,GAAS,IAAD,cACtCsJ,GAAK,UAAAtJ,EAAKuJ,aAAL,mBAAYC,UAAUC,kBAAtB,eAAkC1C,QAAS,EAChD2C,GAAK,UAAA1J,EAAKuJ,aAAL,mBAAYC,UAAUG,kBAAtB,eAAkC5C,QAAS,EAClD6C,EAAmB,UAAGrI,EAAWwB,MAAK,SAAAvB,GAAS,uBAAIA,EAAU9B,gBAAd,aAAI,EAAoBmK,MAAM7J,EAAKN,oBAA/D,aAAG,EAAwEuB,KAE5F6I,GAAoC,QAAnB,EADvBF,EAAmB,UAAGA,SAAH,aAAG,EAAqBpE,QAAO,SAAChE,GAAD,OAAgBA,EAAU6E,mBAAmBC,SAAS,eAAiB9E,EAAU6E,mBAAmBC,SAAS,wBACxI,eAAqB/F,SAAU,EACtD,MAAO,CAAEb,SAAUM,EAAKN,SAAUC,KAAMqJ,EAAahJ,EAAKN,UAAWqH,MAAQuC,EAAKI,EAAKI,qBACtFvD,MAAK,SAACwD,EAAOC,GAAR,OAAkBA,EAAMjD,MAAQgD,EAAMhD,SA4C1CkD,cAAiC,YAAlBlB,EACfmB,QA3CuB,CACzB,CACEhG,IAAK,OACLvE,KAAM,SACNwK,UAAW,OACXC,SAAU,GACVC,SAAU,KAEZ,CACEnG,IAAK,QACLvE,KAAM,QACNwK,UAAW,QACXC,SAAU,GACVC,SAAU,IACVpJ,KAAM,SACNqJ,UAAU,GAEZ,CACEpG,IAAK,YACLvE,KAAM,kBACNwK,UAAW,iBACXC,SAAU,IACVnJ,KAAM,SACNqJ,UAAU,IAqBVC,cAAeC,IAAcC,OAC7BC,oBAlByB,SAACtF,GAC5BlE,QAAQC,IAAI,OAAQuH,EAAUiC,eAAgBjC,EAAUkC,qBAAsBlC,EAAUmC,cAAc,MACtG7E,EAASlD,EAAW,CAAEpD,SAAQ,OAAE0F,QAAF,IAAEA,OAAF,EAAEA,EAAM1F,aAiBpCoL,gCAAgC,EAChCpC,UAAWA,EACXqC,YAhBqB,SAACC,GACpBrI,IAAiB+F,EAAUmC,cAAclI,EAAajD,WACxDgJ,EAAUuC,eAAetI,EAAajD,UAAU,GAAM,SC7E7C,SAASwL,IAEtB,IAAMvI,EAAiCgC,YAAYvB,GAC7CqB,EAAWC,cAQjB,OANAI,qBAAU,WACHnC,GACH8B,EAAS,OAEV,CAAE9B,EAAc8B,IAGjB,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0G,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOC,KAAK,QAAQD,QAAS,cAAC,EAAD,S,aCDpBE,OAjBf,WACE,OACE,cAAC,IAAD,CAAU7H,MAAOA,EAAjB,SACE,cAAC,KAAD,UACE,sBAAK+D,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAACpD,EAAD,MAEF,qBAAKoD,UAAU,UAAf,SACE,cAAC0D,EAAD,cCHGK,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.ef0218ca.chunk.js","sourcesContent":["const config = {\n  users: [\n    {\n      username: 'just_n1ck',\n      name: 'Коля'\n    },\n    {\n      username: 'exeedTeamSmirnov',\n      name: 'Сергей'\n    },\n    {\n      username: 'DmitriyKulbed',\n      name: 'Дима'\n    },\n    {\n      username: 'eugene-bobkov',\n      name: 'Женя'\n    },\n    {\n      username: 'Denis Shupletsov',\n      name: 'Денис'\n    },\n    {\n      username: 'kleputin.exceed',\n      name: 'Миша'\n    },\n    {\n      username: 'amrashrv',\n      name: 'Амир'\n    },\n    {\n      username: 'ilekontsev',\n      name: 'Ваня'\n    },\n    {\n      username: 'Viktor Fenev',\n      name: 'Виктор'\n    },\n    {\n      username: 'axkatee',\n      name: 'Катя'\n    }\n  ],\n  usersEndpoint: 'https://www.codewars.com/api/v1/users/', //https://www.codewars.com/api/v1/users/{user}\n  challengesPrefix: '/code-challenges/completed?page=0',  // https://www.codewars.com/api/v1/users/{user}/code-challenges/completed?page={page}\n  challengesEndpoint: 'https://www.codewars.com/api/v1/code-challenges/'  // https://www.codewars.com/api/v1/code-challenges/{challenge}\n}\n\nexport default config;","import axios from \"axios\"\n\nimport config from \"../config\"\n\nexport const getUserData = (user: string) => {\n  return axios.get(config.usersEndpoint + user)\n}\n\nexport const getUserChallenges = (user: string) => {\n  return axios.get(config.usersEndpoint + user + config.challengesPrefix)\n}\n\nexport const getChallengesDetails = (challenge: string) => {\n  return axios.get(config.challengesEndpoint + challenge)\n}","import { ChallengeDetails } from './../../interfaces/IChallenges';\nimport { Challenge } from '../../interfaces/IChallenges';\nimport { createAsyncThunk } from \"@reduxjs/toolkit\"\nimport { AxiosResponse } from \"axios\";\nimport { getChallengesDetails, getUserChallenges, getUserData } from \"../../api\"\nimport config from \"../../config\"\nimport { User } from \"../../interfaces/IUser\";\n\n\n\nexport const fetchUsers = createAsyncThunk('users/fetchUsers', async () => {\n  if (!config.users.length) {\n    return [];\n  }\n\n  const requests: Promise<AxiosResponse<User>>[] = [];\n  config.users.forEach((user: { username: string, name: string }) => {\n    requests.push(getUserData(user.username))\n  })\n  try {\n    const rawResponse: AxiosResponse<User>[] = await Promise.all(requests);\n    const response = rawResponse.map((resp: AxiosResponse<User>) => resp.data);\n    return response;\n  } catch (err: any) {\n    console.log(\"ERRRR \", err);\n    return [];\n  }\n})\n\n\nexport const fetchChallenges = createAsyncThunk('users/fetchChallenges', async () => {\n  if (!config.users.length) {\n    return [];\n  }\n\n  const requests: Promise<AxiosResponse<Challenge>>[] = [];\n  config.users.forEach((user: { username: string, name: string }) => {\n    requests.push(getUserChallenges(user.username))\n  })\n  try {\n    const rawResponse: AxiosResponse<Challenge>[] = await Promise.all(requests);\n    const response = rawResponse.map((resp: AxiosResponse<Challenge>, i: number) => ({ ...resp.data, username: config.users[ i ].username }));\n    return response;\n  } catch (err: any) {\n    console.log(\"ERRRR \", err);\n    return [];\n  }\n})\n\nexport const fetchChallengesDetails = createAsyncThunk('users/fetchChallengesDetails', async (challenges: string[] | undefined) => {\n  if (!config.users.length || !challenges || !challenges.length) {\n    return [];\n  }\n\n  const requests: Promise<AxiosResponse<ChallengeDetails>>[] = [];\n  challenges.forEach((challenges: string) => {\n    requests.push(getChallengesDetails(challenges))\n  })\n  try {\n    const rawResponse: AxiosResponse<ChallengeDetails>[] = await Promise.all(requests);\n    const response = rawResponse.map((resp: AxiosResponse<ChallengeDetails>) => ({ ...resp.data }));\n    return response;\n  } catch (err: any) {\n    console.log(\"ERRRR \", err);\n    return [];\n  }\n})","import { fetchChallenges } from '../effects/asyncThunk';\nimport { createSlice } from '@reduxjs/toolkit'\nimport { fetchUsers } from '../effects/asyncThunk'\nimport type { RootState } from '../store'\n\ninterface AppState {\n  status: 'loading' | 'idle' | 'error',\n  error: string | undefined\n}\n\nconst initialState: AppState = {\n  status: 'idle',\n  error: undefined\n}\n\nexport const appStateSlice = createSlice({\n  name: 'appState',\n  initialState,\n  reducers: {\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchUsers.pending, (state) => {\n        state.status = 'loading'\n      })\n      .addCase(fetchUsers.fulfilled, (state) => {\n        state.status = 'idle'\n      })\n      .addCase(fetchUsers.rejected, (state, action) => {\n        state.status = 'error'\n        state.error = action.error.message\n      })\n      .addCase(fetchChallenges.pending, (state) => {\n        state.status = 'loading'\n      })\n      .addCase(fetchChallenges.fulfilled, (state) => {\n        state.status = 'idle'\n      })\n      .addCase(fetchChallenges.rejected, (state, action) => {\n        state.status = 'error'\n        state.error = action.error.message\n      })\n  }\n})\n\nexport const selectAppState = (state: RootState) => state.appState.status\n\nexport default appStateSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\nimport { User } from '../../interfaces/IUser'\nimport { fetchUsers } from '../effects/asyncThunk'\nimport type { RootState } from '../store'\n\ninterface UserState {\n  users: User[],\n  selectedUser: User | undefined\n}\n\nconst initialState: UserState = {\n  users: [],\n  selectedUser: undefined\n}\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    resetUsers: state => {\n      state.users = [];\n    },\n    selectUser: (state, action) => {\n      state.selectedUser = state.users.find(user => user.username === action.payload?.username);\n    },\n    clearSelectedUser: (state) => {\n      state.selectedUser = undefined;\n    }\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchUsers.fulfilled, (state, action) => {\n        state.users = [ ...action.payload ];\n      })\n      .addCase(fetchUsers.rejected, (state, action) => {\n        state.users = [];\n      })\n  }\n})\n\nexport const { resetUsers, selectUser, clearSelectedUser } = usersSlice.actions;\n\n// Other code such as selectors can use the imported `RootState` type\nexport const selectUsers = (state: RootState) => state.users.users;\nexport const selectSelectedUser = (state: RootState) => state.users.selectedUser;\n// export const selectUserChallenges = (state: RootState) => (state.users.selectedUser?.codeChallenges || []);\n\nexport default usersSlice.reducer;","import { ChallengeDetails } from './../../interfaces/IChallenges';\nimport { fetchChallengesDetails } from './../effects/asyncThunk';\nimport { fetchChallenges } from '../effects/asyncThunk';\nimport { Challenge } from '../../interfaces/IChallenges';\nimport { createSlice } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\ninterface ChallengesState {\n  challenges: Challenge[],\n  userChallengesDetails: ChallengeDetails[]\n}\n\nconst initialState: ChallengesState = {\n  challenges: [],\n  userChallengesDetails: []\n}\n\nexport const challengesSlice = createSlice({\n  name: 'challenges',\n  initialState,\n  reducers: {\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(fetchChallenges.fulfilled, (state, action) => {\n        state.challenges = [ ...action.payload ];\n      })\n      .addCase(fetchChallenges.rejected, (state) => {\n        state.challenges = []\n      })\n      .addCase(fetchChallengesDetails.fulfilled, (state, action) => {\n        state.challenges = [ ...state.challenges ];\n        state.userChallengesDetails = [ ...action.payload ];\n      })\n      .addCase(fetchChallengesDetails.rejected, (state) => {\n        state.userChallengesDetails = []\n      })\n  }\n})\n\n// export const { } = challengesSlice.actions\nexport const selectChallenges = (state: RootState) => state.challenges.challenges;\nexport const selectUserChallenges = (username: string | undefined) => (state: RootState) => state.challenges.challenges.filter(ch => ch.username === username);\nexport const selectChallengesDetails = (state: RootState) => state.challenges.userChallengesDetails;\n\nexport default challengesSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport appStateReducer from './reducers/appStateSlice'\nimport usersReducer from './reducers/usersSlice'\nimport challengesReducer from './reducers/challegesSlice'\n\n// ...\n\nexport const store = configureStore({\n  reducer: {\n    appState: appStateReducer,\n    users: usersReducer,\n    challenges: challengesReducer,\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import React, { useCallback, useEffect, useState } from 'react';\nimport { INavLink, INavLinkGroup, Nav } from '@fluentui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { selectSelectedUser } from '../../store/reducers/usersSlice';\nimport { useSelector } from 'react-redux';\n\n\nconst navLinkGroups: INavLinkGroup[] = [\n  {\n    links: [\n      { name: 'Ranks', url: '', key: 'ranks' },\n      { name: 'Details', url: '', key: 'chart', disabled: true },\n    ]\n  }\n];\n\nexport default function NavMenu() {\n  const [ state, setState ] = useState(navLinkGroups)\n  const [ selectedKey, setSelectedKey ] = useState('ranks')\n\n\n  const navigate = useNavigate();\n  const selectedUser = useSelector(selectSelectedUser)\n\n  const setNavState = useCallback(() => {\n    setState((state) => {\n      state[ 0 ].links[ 1 ].disabled = !selectedUser\n      return [ ...state ]\n    });\n  }, [ selectedUser ])\n\n\n  useEffect(() => {\n    setNavState();\n  }, [ selectedUser, setNavState ])\n\n  const linkClickHandler = (ev: any, item: INavLink | undefined) => {\n    setSelectedKey(item?.key || '/')\n    switch (item?.key) {\n      case 'ranks':\n        navigate('/')\n        break;\n      case 'chart':\n        navigate('/chart')\n        break;\n      default:\n        navigate('/');\n    }\n  }\n\n  return (\n    <div>\n      <Nav\n        selectedKey={selectedKey}\n        ariaLabel=\"Nav example with custom group headers\"\n        groups={state}\n        onLinkClick={linkClickHandler}\n      />\n    </div>\n\n\n  )\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ReactECharts from 'echarts-for-react';\nimport { Challenge, ChallengeDetails } from '../../interfaces/IChallenges';\nimport { User } from '../../interfaces/IUser';\nimport { fetchChallengesDetails } from '../../store/effects/asyncThunk';\n// import { selectAppState } from '../../store/reducers/appStateSlice';\nimport { selectChallengesDetails, selectUserChallenges } from '../../store/reducers/challegesSlice';\nimport { selectSelectedUser } from '../../store/reducers/usersSlice';\nimport { AppDispatch } from '../../store/store';\n\nimport './Chart.css';\n\nconst scoreDict: { [ key: string ]: number } = {\n  \"8 kyu\": 2,\n  \"7 kyu\": 3,\n  \"6 kyu\": 8,\n  \"5 kyu\": 21,\n  \"4 kyu\": 55,\n  \"3 kyu\": 149,\n  \"2 kyu\": 404,\n  \"1 kyu\": 1097,\n}\n\nfunction Chart() {\n  // const loadingStatus = useSelector(selectAppState)\n  const selectedUser: User | undefined = useSelector(selectSelectedUser);\n  const userChallenges: Challenge[] = useSelector(selectUserChallenges(selectedUser?.username));\n  const userChallengesDetails: ChallengeDetails[] = useSelector(selectChallengesDetails);\n\n  const challegesData = userChallenges.flatMap(ch => ch.data)\n\n  const [ dataY, setDataY ] = useState([] as number[]);\n  const [ dataX, setDataX ] = useState([] as string[]);\n\n\n  const dispatch: AppDispatch = useDispatch();\n\n  useEffect(() => {\n    const challengesId = challegesData.map(ch => ch.id)\n    dispatch(fetchChallengesDetails(challengesId))\n  }, [ dispatch ])\n\n  const prepareData = useCallback(() => {\n    if (userChallenges && userChallenges[ 0 ]) {\n\n      let challenges = [ ...userChallenges[ 0 ].data.filter(ch => ch.completedLanguages.includes('javascript') || ch.completedLanguages.includes('typescript')) ]\n      challenges = challenges.sort((a, b) => {\n        return (new Date(b.completedAt).getTime() - new Date(a.completedAt).getTime() > 0 ? -1 : 1)\n      })\n\n      challenges = challenges.reduce((acc: any, cV) => {\n        const score = scoreDict[ userChallengesDetails.find(ch => ch.name === cV.name)?.rank.name || \"8 kyu\" ];\n        const completedAt = new Date(cV.completedAt).toLocaleString();\n        if (!!acc[ completedAt ]) {\n          acc[ completedAt ].score += score;\n        } else {\n          acc[ completedAt ] = { score }\n        }\n        return acc;\n      }, {})\n\n      const scores = Object.values(challenges).map(val => val.score)\n      const dates = Object.keys(challenges)\n      setDataY([ ...scores ]);\n      setDataX([ ...dates ]);\n    }\n  }, [ userChallengesDetails ])\n\n  useEffect(() => {\n    prepareData();\n  }, [ prepareData ])\n\n  const getOption = () => {\n    return {\n      grid: { top: 8, right: 8, bottom: 24, left: 36 },\n      xAxis: {\n        type: 'category',\n        data: dataX,\n      },\n      yAxis: {\n        type: 'value',\n      },\n      series: [\n        {\n          data: dataY,\n          type: 'line',\n          smooth: true,\n        },\n      ],\n      tooltip: {\n        trigger: 'axis',\n      },\n    }\n  }\n\n  const onChartReadyCallback = () => {\n    console.log(999, 'charts are ready')\n  }\n\n  return (\n    <div className='chart-container'>\n      <ReactECharts\n        option={getOption()}\n        notMerge={true}\n        lazyUpdate={false}\n        theme={\"theme_name\"}\n        onChartReady={onChartReadyCallback}\n      />\n    </div >\n  );\n}\n\nexport default Chart;","import React, { useEffect } from 'react';\nimport { AppDispatch } from '../store/store'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectSelectedUser, selectUser, selectUsers } from '../store/reducers/usersSlice';\nimport { fetchChallenges, fetchUsers } from '../store/effects/asyncThunk';\nimport { CheckboxVisibility, IColumn, Selection, SelectionMode, ShimmeredDetailsList } from '@fluentui/react';\nimport config from '../config';\n\nimport './Users.css';\nimport { selectChallenges } from '../store/reducers/challegesSlice';\nimport { User } from '../interfaces/IUser';\nimport { Challenge } from '../interfaces/IChallenges';\nimport { selectAppState } from '../store/reducers/appStateSlice';\n\nconst selection = new Selection({\n  canSelectItem: (item: any) => {\n    // console.log('ITEM', item)\n    return true;\n  },\n  getKey: (item: any) => {\n    return item.username;\n  }\n});\n\nfunction Users() {\n  const loadingStatus = useSelector(selectAppState)\n  const users: User[] = useSelector(selectUsers);\n  const selectedUser: User | undefined = useSelector(selectSelectedUser)\n  const challenges: Challenge[] = useSelector(selectChallenges);\n\n  const dispatch: AppDispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUsers())\n  }, [ dispatch ])\n\n  useEffect(() => {\n    if (users.length) {\n      dispatch(fetchChallenges())\n    }\n  }, [ users, dispatch ])\n\n  const getValidName = (username: string): string => {\n    return config.users.find(user => user.username === username)?.name || username\n  }\n\n  const getUsersItems = () => users.map(user => {\n    const ts = user.ranks?.languages.typescript?.score || 0;\n    const js = user.ranks?.languages.javascript?.score || 0;\n    let completedChallenges = challenges.find(challenge => challenge.username?.match(user.username))?.data;\n    completedChallenges = completedChallenges?.filter((challenge) => (challenge.completedLanguages.includes('javascript') || challenge.completedLanguages.includes('typescript')))\n    const challengeCount = completedChallenges?.length || 0;\n    return { username: user.username, name: getValidName(user.username), score: (ts + js), challengeCount }\n  }).sort((user1, user2) => user2.score - user1.score)\n\n  const columns: IColumn[] = [\n    {\n      key: 'name',\n      name: 'Hacker',\n      fieldName: 'name',\n      minWidth: 10,\n      maxWidth: 100\n    },\n    {\n      key: 'score',\n      name: 'Score',\n      fieldName: 'score',\n      minWidth: 50,\n      maxWidth: 100,\n      data: 'string',\n      isPadded: true,\n    },\n    {\n      key: 'challenge',\n      name: 'Completed tasks',\n      fieldName: 'challengeCount',\n      minWidth: 300,\n      data: 'string',\n      isPadded: true,\n    }\n  ];\n\n  const itemSelectionHandler = (item: any) => {\n    console.log(444443, selection.getSelection(), selection.getSelectedIndices(), selection.isKeySelected('1'))\n    dispatch(selectUser({ username: item?.username }))\n  };\n\n  const detailsDidUpdate = (detailsList: any) => {\n    if (selectedUser && !selection.isKeySelected(selectedUser.username)) {\n      selection.setKeySelected(selectedUser.username, true, true)\n    }\n  }\n\n  return <div className=\"table-container\">\n    <ShimmeredDetailsList\n      checkboxVisibility={CheckboxVisibility.hidden}\n      items={getUsersItems()}\n      enableShimmer={loadingStatus === 'loading'}\n      columns={columns}\n      selectionMode={SelectionMode.single}\n      onActiveItemChanged={itemSelectionHandler}\n      selectionPreservedOnEmptyClick={true}\n      selection={selection}\n      onDidUpdate={detailsDidUpdate}\n    />\n  </div>;\n}\n\nexport default Users;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Routes,\n  Route,\n  useNavigate,\n} from 'react-router-dom';\nimport { User } from '../interfaces/IUser';\nimport { selectSelectedUser } from '../store/reducers/usersSlice';\nimport Chart from './Chart/Chart';\nimport Users from './Users';\n\nexport default function Pages() {\n\n  const selectedUser: User | undefined = useSelector(selectSelectedUser);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!selectedUser) {\n      navigate('/')\n    }\n  }, [ selectedUser, navigate ])\n\n  return (\n    <Routes>\n      <Route index element={<Users />} />\n      <Route path=\"chart\" element={<Chart />} />\n    </Routes>\n  );\n}","import React from 'react';\nimport './App.css';\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\nimport NavMenu from './components/NavMenu/NavMenu';\nimport Pages from './pages/Pages';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"main-container\">\n          <div className=\"nav\">\n            <NavMenu></NavMenu>\n          </div>\n          <div className=\"content\">\n            <Pages />\n          </div>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}